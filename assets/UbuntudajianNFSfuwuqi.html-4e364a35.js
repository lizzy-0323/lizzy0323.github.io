import { _ as _export_sfc, o as openBlock, c as createElementBlock, e as createStaticVNode } from "./app-657f6655.js";
const _sfc_main = {};
function _sfc_render(_ctx, _cache) {
  return openBlock(), createElementBlock("div", null, _cache[0] || (_cache[0] = [
    createStaticVNode('<pre><code>本文记录了利用 Ubuntu 搭建 NFS 服务器的过程，遇到的一些问题以及一些思考\n</code></pre><h2 id="什么是-nfs" tabindex="-1"><a class="header-anchor" href="#什么是-nfs" aria-hidden="true">#</a> 什么是 NFS？</h2><p>NFS 是 Network File System 的缩写，即网络文件系统。功能是通过网络让不同的机器、不同的操作系统能够彼此分享个别的数据，让应用程序在客户端通过网络访问位于服务器磁盘中的数据，是在类 Unix 系统间实现磁盘文件共享的一种方法。</p><p>优点：容许不同的客户端和服务器之间实现文件共享，基于 RPC 实现，独立于操作系统，可以理解为 RPC 协议负责文件的传输，而 NFS 实现了一个文件系统</p><p>以我自己为例，由于 MAC 的硬盘只有 256，可以采用实验室在同一局域网下的 Ubuntu server 下作为 NFS server，把文件置于其中，然后挂载到本地，这样实际上文件没有在我的 mac 上，但是同一局域网下可以畅通访问</p><h2 id="ubuntu-搭建-nfs-server" tabindex="-1"><a class="header-anchor" href="#ubuntu-搭建-nfs-server" aria-hidden="true">#</a> Ubuntu 搭建 NFS server</h2><h3 id="安装-nfs-kernal-server" tabindex="-1"><a class="header-anchor" href="#安装-nfs-kernal-server" aria-hidden="true">#</a> 安装 nfs-kernal-server</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> update\n<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> nfs-kernal-server\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>安装完后，可以检查本地的服务状态</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl status nfs-mountd.service\nsystemctl status nfs-server.service \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这里，如果 nfs-server 服务的状态显示 exited 是正常的</p><h3 id="修改-nfs-配置文件" tabindex="-1"><a class="header-anchor" href="#修改-nfs-配置文件" aria-hidden="true">#</a> 修改 NFS 配置文件</h3><h4 id="创建挂载目录并修改权限" tabindex="-1"><a class="header-anchor" href="#创建挂载目录并修改权限" aria-hidden="true">#</a> 创建挂载目录并修改权限</h4><ul><li>创建挂载目录</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /opt/nfs\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>修改权限，这里因为创建后的文件夹属于当前用户，被挂载后可能会提示权限不足，导致无法操作</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">chown</span> nobody:nogroup /opt/nfs\n<span class="token function">sudo</span> <span class="token function">chmod</span> <span class="token number">777</span> /opt/nfs\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="修改-etc-exports" tabindex="-1"><a class="header-anchor" href="#修改-etc-exports" aria-hidden="true">#</a> 修改/etc/exports</h4><p>该文件主要用于 NFS server 的配置，我的配置如下所示： ![[Pasted image 20241018123556.png]] 其中：</p><ul><li><code>rw</code> 表示客户端可以读写文件。</li><li><code>sync</code> 表示所有的I/O操作都将被同步执行。</li><li><code>no_root_squash</code> 表示远程root用户具有与本地root用户相同的权限。</li><li><code>no_subtree_check</code> 表示不对子目录进行权限检查</li><li><code>insecure</code> 表示允许非 root 用户的客户端发起连接 <strong>注意这里有一个大坑!!：</strong> 很多教程里没有加入 insecure，导致 mac 用户在常规角色权限的条件下并不能发起请求 而且几乎没有报错信息!! 只会显示 <code>operation not permitted</code>，实际上就是权限的问题</li></ul><h4 id="输出共享目录" tabindex="-1"><a class="header-anchor" href="#输出共享目录" aria-hidden="true">#</a> 输出共享目录</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> exportfs <span class="token parameter variable">-a</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="重启服务" tabindex="-1"><a class="header-anchor" href="#重启服务" aria-hidden="true">#</a> 重启服务</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl restart nfs-kernel-server\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="测试-nfs-服务" tabindex="-1"><a class="header-anchor" href="#测试-nfs-服务" aria-hidden="true">#</a> 测试 NFS 服务</h2><p>至此，我们就完成了 ubuntu 上 nfs-server 的搭建。这里如果客户端已经安装完毕后，可以采用：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>showmount <span class="token parameter variable">-e</span> <span class="token operator">&lt;</span>server_ip<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>来查看服务器共享信息。 以我上图的配置为例：结果如下所示： ![[Pasted image 20241018124246.png]] 如果是采用 MAC, 你可以：</p><ol><li>打开 finder，输入 <code>cmd+k</code></li><li>输入：<code>nfs://&lt;server_ip&gt;/&lt;共享文件夹&gt;</code>，完成连接，因为mac 是自带 nfs 客户端的，所以无需额外配置</li></ol>', 29)
  ]));
}
const UbuntudajianNFSfuwuqi_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "UbuntudajianNFSfuwuqi.html.vue"]]);
export {
  UbuntudajianNFSfuwuqi_html as default
};
